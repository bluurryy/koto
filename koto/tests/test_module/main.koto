# A simple test module, used by ../import.koto

local_value = 123

# Export with multi-assignment
export foo, bar = 42, -1

# Export with let
export let square: Function = |x| x * x

# Export with a map block
export
  baz: import baz # Re-export the neighbouring baz module
  tests_were_run: false

# Metakeys can be assigned to directly
@type = 'test_module'

@test run_tests = ||
  # Re-export `tests_were_run` when this test is run
  export tests_were_run = true

@test local_value_unmodified_by_import = ||
  # Ensure that the local value captured here wasn't affected by the earlier `import`
  assert_eq local_value, 123

@test script_dir_and_path = ||
  # Ensure that script_dir/path are defined correctly within the module
  assert koto.script_dir().ends_with 'test_module'
  path = koto.script_path()
  assert path.contains 'test_module'
  assert path.ends_with 'main.koto'
